{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","changeHandler","event","target","value","name","setState","submitHandler","preventDefault","props","onAdd","this","onSubmit","htmlFor","type","required","id","onChange","placeholder","Component","App","moviesFromServer","prevState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8cfef4f4.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  };\n\n  changeHandler = (event) => {\n    const { value, name } = event.target;\n\n    this.setState({ [name]: value });\n  }\n\n  submitHandler = (event) => {\n    event.preventDefault();\n\n    this.props.onAdd(this.state);\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  }\n\n  render() {\n    const { title, description, imgUrl, imdbUrl, imdbId } = this.state;\n\n    return (\n      <form\n        name=\"newMovie\"\n        onSubmit={this.submitHandler}\n      >\n\n        <label\n          htmlFor=\"title\"\n        >\n          Movie title\n        </label>\n\n        <input\n          type=\"text\"\n          required\n          name=\"title\"\n          id=\"title\"\n          value={title}\n          onChange={this.changeHandler}\n          placeholder=\"Title\"\n        />\n\n        <label\n          htmlFor=\"description\"\n        >\n          Movie description\n        </label>\n\n        <textarea\n          name=\"description\"\n          id=\"description\"\n          value={description}\n          onChange={this.changeHandler}\n          placeholder=\"Description\"\n        />\n\n        <label\n          htmlFor=\"imgUrl\"\n        >\n          Image url\n        </label>\n\n        <input\n          type=\"text\"\n          required\n          name=\"imgUrl\"\n          id=\"imgUrl\"\n          value={imgUrl}\n          onChange={this.changeHandler}\n          placeholder=\"Image url\"\n        />\n\n        <label\n          htmlFor=\"imdbUrl\"\n        >\n          IMDb url\n        </label>\n\n        <input\n          type=\"text\"\n          required\n          name=\"imdbUrl\"\n          id=\"imdbUrl\"\n          value={imdbUrl}\n          onChange={this.changeHandler}\n          placeholder=\"IMDb url\"\n        />\n\n        <label\n          htmlFor=\"imdbId\"\n        >\n          IMDb id\n        </label>\n\n        <input\n          type=\"text\"\n          required\n          name=\"imdbId\"\n          id=\"imdbId\"\n          value={imdbId}\n          onChange={this.changeHandler}\n          placeholder=\"IMDb id\"\n        />\n\n        <button type=\"submit\">Add movie</button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  onAdd = (movie) => {\n    this.setState(prevState => ({\n      movies: [...prevState.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.onAdd} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}